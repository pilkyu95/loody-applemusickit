{"version":3,"file":"unpublish-manifest.js","names":["_ajv","_interopRequireDefault","require","e","__esModule","default","ajv","Ajv","schema","type","properties","name","versions","minProperties","_rev","_id","time","created","modified","patternProperties","additionalProperties","readme","latest","required","validate","compile","validateUnPublishSingleVersion","manifest"],"sources":["../../src/schemes/unpublish-manifest.ts"],"sourcesContent":["import Ajv, { JSONSchemaType } from 'ajv';\n\nconst ajv = new Ajv();\n\ninterface Manifest {\n  name: string;\n  versions: Record<string, unknown>;\n  _rev: string;\n  _id: string;\n  time: {\n    created: string;\n    modified: string;\n    [key: string]: string; // Allows pattern properties such as version numbers\n  };\n  readme: string;\n  'dist-tags': {\n    latest: string;\n    [key: string]: unknown; // Allows additional properties\n  };\n}\n\n// @ts-ignore\nconst schema: JSONSchemaType<Manifest> = {\n  type: 'object',\n  properties: {\n    name: { type: 'string' },\n    versions: { type: 'object', minProperties: 1 },\n    _rev: { type: 'string' },\n    _id: { type: 'string' },\n    time: {\n      type: 'object',\n      properties: {\n        created: { type: 'string' },\n        modified: { type: 'string' },\n      },\n      patternProperties: {\n        '^[0-9]+\\\\.[0-9]+\\\\.[0-9]+-\\\\d+$': { type: 'string' },\n      },\n      additionalProperties: true,\n    },\n    readme: { type: 'string' },\n    'dist-tags': {\n      type: 'object',\n      properties: {\n        latest: { type: 'string' },\n      },\n      required: ['latest'],\n      additionalProperties: true,\n    },\n  },\n  required: ['name', 'versions', 'dist-tags', '_rev', '_id', 'readme', 'time'],\n  additionalProperties: true,\n};\n\n// validate is a type guard for MyData - type is inferred from schema type\nconst validate = ajv.compile(schema);\n\n/**\n * Validate if a manifest has the correct structure when a new package\n * is being created. The properties name, versions and _attachments must contain 1 element.\n * @param data a manifest object\n * @returns boolean\n */\nexport function validateUnPublishSingleVersion(manifest: any) {\n  if (!manifest) {\n    return false;\n  }\n  return validate(manifest);\n}\n"],"mappings":";;;;;;AAAA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0C,SAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE1C,MAAMG,GAAG,GAAG,IAAIC,YAAG,CAAC,CAAC;AAmBrB;AACA,MAAMC,MAAgC,GAAG;EACvCC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACVC,IAAI,EAAE;MAAEF,IAAI,EAAE;IAAS,CAAC;IACxBG,QAAQ,EAAE;MAAEH,IAAI,EAAE,QAAQ;MAAEI,aAAa,EAAE;IAAE,CAAC;IAC9CC,IAAI,EAAE;MAAEL,IAAI,EAAE;IAAS,CAAC;IACxBM,GAAG,EAAE;MAAEN,IAAI,EAAE;IAAS,CAAC;IACvBO,IAAI,EAAE;MACJP,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACVO,OAAO,EAAE;UAAER,IAAI,EAAE;QAAS,CAAC;QAC3BS,QAAQ,EAAE;UAAET,IAAI,EAAE;QAAS;MAC7B,CAAC;MACDU,iBAAiB,EAAE;QACjB,iCAAiC,EAAE;UAAEV,IAAI,EAAE;QAAS;MACtD,CAAC;MACDW,oBAAoB,EAAE;IACxB,CAAC;IACDC,MAAM,EAAE;MAAEZ,IAAI,EAAE;IAAS,CAAC;IAC1B,WAAW,EAAE;MACXA,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACVY,MAAM,EAAE;UAAEb,IAAI,EAAE;QAAS;MAC3B,CAAC;MACDc,QAAQ,EAAE,CAAC,QAAQ,CAAC;MACpBH,oBAAoB,EAAE;IACxB;EACF,CAAC;EACDG,QAAQ,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC;EAC5EH,oBAAoB,EAAE;AACxB,CAAC;;AAED;AACA,MAAMI,QAAQ,GAAGlB,GAAG,CAACmB,OAAO,CAACjB,MAAM,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACO,SAASkB,8BAA8BA,CAACC,QAAa,EAAE;EAC5D,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,KAAK;EACd;EACA,OAAOH,QAAQ,CAACG,QAAQ,CAAC;AAC3B","ignoreList":[]}