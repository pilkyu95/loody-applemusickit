{"version":3,"file":"getLocalRegistryTarballUri.js","names":["_debug","_interopRequireDefault","require","_core","_url","e","__esModule","default","debug","buildDebug","getLocalRegistryTarballUri","uri","pkgName","requestOptions","urlPrefix","currentHost","headers","host","tarballName","tarballUtils","extractTarballFromUrl","domainRegistry","getPublicUrl"],"sources":["../src/getLocalRegistryTarballUri.ts"],"sourcesContent":["import buildDebug from 'debug';\n\nimport { tarballUtils } from '@verdaccio/core';\nimport { RequestOptions } from '@verdaccio/url';\nimport { getPublicUrl } from '@verdaccio/url';\n\nconst debug = buildDebug('verdaccio:core:tarball');\n\n/**\n * Filter a tarball url.\n * @param {*} uri\n * @return {String} a parsed url\n */\nexport function getLocalRegistryTarballUri(\n  uri: string,\n  pkgName: string,\n  requestOptions: RequestOptions,\n  urlPrefix: string | void\n): string {\n  const currentHost = requestOptions?.headers?.host;\n\n  if (!currentHost) {\n    return uri;\n  }\n  const tarballName = tarballUtils.extractTarballFromUrl(uri);\n  debug('tarball name %o', tarballName);\n  // header only set with proxy that setup with HTTPS\n  const domainRegistry = getPublicUrl(urlPrefix || '', requestOptions);\n\n  return `${domainRegistry}${pkgName}/-/${tarballName}`;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,KAAA,GAAAD,OAAA;AAEA,IAAAE,IAAA,GAAAF,OAAA;AAA8C,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE9C,MAAMG,KAAK,GAAG,IAAAC,cAAU,EAAC,wBAAwB,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACO,SAASC,0BAA0BA,CACxCC,GAAW,EACXC,OAAe,EACfC,cAA8B,EAC9BC,SAAwB,EAChB;EACR,MAAMC,WAAW,GAAGF,cAAc,EAAEG,OAAO,EAAEC,IAAI;EAEjD,IAAI,CAACF,WAAW,EAAE;IAChB,OAAOJ,GAAG;EACZ;EACA,MAAMO,WAAW,GAAGC,kBAAY,CAACC,qBAAqB,CAACT,GAAG,CAAC;EAC3DH,KAAK,CAAC,iBAAiB,EAAEU,WAAW,CAAC;EACrC;EACA,MAAMG,cAAc,GAAG,IAAAC,iBAAY,EAACR,SAAS,IAAI,EAAE,EAAED,cAAc,CAAC;EAEpE,OAAO,GAAGQ,cAAc,GAAGT,OAAO,MAAMM,WAAW,EAAE;AACvD","ignoreList":[]}